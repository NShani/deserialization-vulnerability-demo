package org.wso2.sample.deserialization.handler.jackson;

import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
//import com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;
//import com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

import java.nio.file.Files;
import java.nio.file.Paths;

public class JacksonDatabindDeserializer {

    public static void main(String[] args) throws Exception {
        JacksonDatabindDeserializer illegalTypesCheckTest = new JacksonDatabindDeserializer();
        illegalTypesCheckTest.deserialize();
    }

    public void deserialize() throws Exception {
        //read json file data
        byte[] jsonData = Files.readAllBytes(Paths.get("src/main/resources/test.json"));

        ObjectMapper mapper = new ObjectMapper();

        // Enable global polymorphic type handling
//        mapper.enableDefaultTyping();
//        PolymorphicTypeValidator ptv =
//                BasicPolymorphicTypeValidator.builder()
//                        .allowIfBaseType(Serializable.class)
//                        .allowIfSubType(Student.class)
//                        .build();
//        mapper.activateDefaultTyping(ptv, ObjectMapper.DefaultTyping.NON_FINAL);

        // Type handling using JSONType
//        PolymorphicTypeValidator ptv =
//                BasicPolymorphicTypeValidator.builder()
//                        .allowIfSubType(Serializable.class)
//                        .build();
//        ObjectMapper mapper = JsonMapper.builder()
//                .polymorphicTypeValidator(ptv)
//                .build();
        try {
            //deserialize the byte array to the given object
            Student student = mapper.readValue(jsonData, Student.class);

            System.out.println("Student name : " + student.name);
        } catch (JsonMappingException e) {
            System.out.println("Prevented for security reasons\n :" + e);
        }
    }
}

    class Student {
        public int id;
        public String name;

        @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)
        public PhoneNumber obj;
//        JsonMapper.Builder.polymorphicTypeValidator()
//        @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)
//        PhoneNumber phoneNumber;
    }

    class InternationalNumber extends PhoneNumber {
        public int countryCode;
    }

    class DomesticNumber extends PhoneNumber { }
